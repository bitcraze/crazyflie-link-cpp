name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Weekly build to make sure dependencies are OK
    - cron:  '30 14 * * 3'
  workflow_dispatch:
    inputs:
      guard:
        description: 'Do not run manually. Run "publish" to publish on Pypi'
        required: true
      repository_url:
        description: 'URL of the pypi repository to upload to'
        required: true
        default: 'https://test.pypi.org/legacy/'

jobs:
  Source:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install sdist dependencies
      run: pip3 install setuptools

    - name: Generate source distribution tarball
      run: python3 setup.py sdist

    - name: Build source distribution
      run: |
        sudo apt-get install -y libusb-1.0-0-dev ninja-build
        pip3 install wheel
        pip3 wheel dist/*.tar.gz

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: source-build
        path: "dist/*.tar.gz"

  Linux:
    runs-on: ubuntu-22.04
    needs: Source

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Pull builder image
      run: docker pull quay.io/pypa/manylinux2014_x86_64

    - name: Python version
      run: python --version

    - name: Build wheels
      run: tools/build/build-wheels.sh ${{ matrix.python }}

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: "dist/*.whl"

  MacOS:
    runs-on: macos-12
    needs: Source

    strategy:
      matrix:
        python: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: pip install cmake ninja wheel

      - name: Build
        run: python setup.py bdist_wheel

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: "dist/*.whl"

  Windows:
    runs-on: windows-2022
    needs: Source

    strategy:
      matrix:
        python: ['3.8', '3.9']

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: pip install wheel

      - name: Build
        run: python setup.py bdist_wheel

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: win-build
          path: "dist/*.whl"

  Publish:
    runs-on: ubuntu-22.04
    needs: [Source, Linux, MacOS, Windows]
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.guard == 'do-release' }}

    steps:
    - uses: actions/download-artifact@v3

    - uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Check match between the build version and the current git tag
      run: |
        sudo apt-get install -y jq
        pip3 install wheel-inspect

        export TAG=$(echo ${{ github.ref }} | cut -d/ -f3)
        python3 -m wheel_inspect *-build/*.whl | jq .version | grep ^\\\"$TAG\\\"$


    - name: Publish on Pypi
      if: ${{ github.event_name == 'workflow_dispatch' }}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip3 install setuptools
        pip3 install twine

        python3 -m twine check source-build/*
        python3 -m twine check linux-build/*
        python3 -m twine check macos-build/*
        python3 -m twine check win-build/*

        python3 -m twine upload --skip-existing --repository-url ${{ github.event.inputs.repository_url }} source-build/*
        python3 -m twine upload --skip-existing --repository-url ${{ github.event.inputs.repository_url }} linux-build/*
        python3 -m twine upload --skip-existing --repository-url ${{ github.event.inputs.repository_url }} macos-build/*
        python3 -m twine upload --skip-existing --repository-url ${{ github.event.inputs.repository_url }} win-build/*
